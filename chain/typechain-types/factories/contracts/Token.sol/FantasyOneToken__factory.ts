/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FantasyOneToken,
  FantasyOneTokenInterface,
} from "../../../contracts/Token.sol/FantasyOneToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceNumber",
        type: "uint256",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalRaces",
        type: "uint256",
      },
    ],
    name: "getPendingTokensForAllRaces",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raceNumber",
        type: "uint256",
      },
    ],
    name: "getPendingTokensForRace",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raceNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setClaimableTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020016e2330b73a30b9bca7b732aa37b5b2b760891b815250604051806040016040528060038152602001622320a760e91b815250816003908162000067919062000194565b50600462000076828262000194565b505050620000936200008d6200009960201b60201c565b6200009d565b62000260565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011a57607f821691505b6020821081036200013b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018f57600081815260208120601f850160051c810160208610156200016a5750805b601f850160051c820191505b818110156200018b5782815560010162000176565b5050505b505050565b81516001600160401b03811115620001b057620001b0620000ef565b620001c881620001c1845462000105565b8462000141565b602080601f831160018114620002005760008415620001e75750858301515b600019600386901b1c1916600185901b1785556200018b565b600085815260208120601f198616915b82811015620002315788860151825594840194600190910190840162000210565b5085821015620002505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610ed280620002706000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637241dfa0116100b8578063a9059cbb1161007c578063a9059cbb1461029e578063b836d08b146102b1578063bc4e2ce7146102c4578063dd62ed3e146102e4578063f2fde38b146102f7578063f53215c31461030a57600080fd5b80637241dfa01461021d5780638da5cb5b1461023d57806395d89b41146102585780639f75ad1814610260578063a457c2d71461028b57600080fd5b806339509351116100ff57806339509351146101b157806340c10f19146101c457806346e04a2f146101d957806370a08231146101ec578063715018a61461021557600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b610144610335565b6040516101519190610c46565b60405180910390f35b61016d610168366004610cb0565b6103c7565b6040519015158152602001610151565b6002545b604051908152602001610151565b61016d61019d366004610cda565b6103e1565b60405160128152602001610151565b61016d6101bf366004610cb0565b610405565b6101d76101d2366004610cb0565b610427565b005b6101d76101e7366004610d16565b610463565b6101816101fa366004610d2f565b6001600160a01b031660009081526020819052604090205490565b6101d76104f5565b61018161022b366004610d2f565b60076020526000908152604090205481565b6005546040516001600160a01b039091168152602001610151565b610144610509565b61018161026e366004610d16565b336000908152600660209081526040808320938352929052205490565b61016d610299366004610cb0565b610518565b61016d6102ac366004610cb0565b610593565b6101d76102bf366004610d4a565b610612565b6102d76102d2366004610d16565b610640565b6040516101519190610d7d565b6101816102f2366004610dc1565b6106e7565b6101d7610305366004610d2f565b610712565b610181610318366004610cb0565b600660209081526000928352604080842090915290825290205481565b60606003805461034490610df4565b80601f016020809104026020016040519081016040528092919081815260200182805461037090610df4565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b6000336103d581858561078b565b60019150505b92915050565b6000336103ef8582856108af565b6103fa858585610929565b506001949350505050565b6000336103d581858561041883836106e7565b6104229190610e44565b61078b565b6001600160a01b0382166000908152600760205260408120805483929061044f908490610e44565b9091555061045f90508282610acd565b5050565b336000908152600660209081526040808320848452909152902054806104d05760405162461bcd60e51b815260206004820152601c60248201527f4e6f20746f6b656e7320617661696c61626c6520746f20636c61696d0000000060448201526064015b60405180910390fd5b33600081815260066020908152604080832086845290915281205561045f9082610acd565b6104fd610b8c565b6105076000610be6565b565b60606004805461034490610df4565b6000338161052682866106e7565b9050838110156105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104c7565b6103fa828686840361078b565b60006001600160a01b03831630146106015760405162461bcd60e51b815260206004820152602b60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420746f20746860448201526a1a5cc818dbdb9d1c9858dd60aa1b60648201526084016104c7565b61060b8383610c38565b9392505050565b61061a610b8c565b6001600160a01b0390921660009081526006602090815260408083209383529290522055565b606060008267ffffffffffffffff81111561065d5761065d610e57565b604051908082528060200260200182016040528015610686578160200160208202803683370190505b50905060005b838110156106e05733600090815260066020908152604080832084845290915290205482518390839081106106c3576106c3610e6d565b6020908102919091010152806106d881610e83565b91505061068c565b5092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61071a610b8c565b6001600160a01b03811661077f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c7565b61078881610be6565b50565b6001600160a01b0383166107ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104c7565b6001600160a01b03821661084e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104c7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108bb84846106e7565b9050600019811461092357818110156109165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104c7565b610923848484840361078b565b50505050565b6001600160a01b03831661098d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104c7565b6001600160a01b0382166109ef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104c7565b6001600160a01b03831660009081526020819052604090205481811015610a675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104c7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610923565b6001600160a01b038216610b235760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104c7565b8060026000828254610b359190610e44565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b031633146105075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000336103d5818585610929565b600060208083528351808285015260005b81811015610c7357858101830151858201604001528201610c57565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cab57600080fd5b919050565b60008060408385031215610cc357600080fd5b610ccc83610c94565b946020939093013593505050565b600080600060608486031215610cef57600080fd5b610cf884610c94565b9250610d0660208501610c94565b9150604084013590509250925092565b600060208284031215610d2857600080fd5b5035919050565b600060208284031215610d4157600080fd5b61060b82610c94565b600080600060608486031215610d5f57600080fd5b610d6884610c94565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015610db557835183529284019291840191600101610d99565b50909695505050505050565b60008060408385031215610dd457600080fd5b610ddd83610c94565b9150610deb60208401610c94565b90509250929050565b600181811c90821680610e0857607f821691505b602082108103610e2857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103db576103db610e2e565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610e9557610e95610e2e565b506001019056fea26469706673582212205d92bb0e9ca51d05ee0c689d246df8299ecc90999e72541a04d9573354bc951a64736f6c63430008110033";

type FantasyOneTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FantasyOneTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FantasyOneToken__factory extends ContractFactory {
  constructor(...args: FantasyOneTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FantasyOneToken> {
    return super.deploy(overrides || {}) as Promise<FantasyOneToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FantasyOneToken {
    return super.attach(address) as FantasyOneToken;
  }
  override connect(signer: Signer): FantasyOneToken__factory {
    return super.connect(signer) as FantasyOneToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FantasyOneTokenInterface {
    return new utils.Interface(_abi) as FantasyOneTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FantasyOneToken {
    return new Contract(address, _abi, signerOrProvider) as FantasyOneToken;
  }
}
