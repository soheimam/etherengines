/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FantasyOne,
  FantasyOneInterface,
} from "../../../contracts/Fantasy.sol/FantasyOne";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "URISuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeRace",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "driverNumber",
        type: "uint8",
      },
    ],
    name: "getDriverCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "driverNumber",
        type: "uint8",
      },
    ],
    name: "getDriverRating",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "teamNumber",
        type: "uint8",
      },
    ],
    name: "getTeamCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "teamNumber",
        type: "uint8",
      },
    ],
    name: "getTeamRating",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "raceNumber",
        type: "uint8",
      },
    ],
    name: "getTrackData",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "temperature",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "conditions",
            type: "uint8",
          },
        ],
        internalType: "struct TrackData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_driverMain",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_driverSecondary",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_teamNumber",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "raceNumber",
        type: "uint8",
      },
    ],
    name: "setActiveRace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdToDriverMapping",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "updateOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "updateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526005608090815264173539b7b760d91b60a052600d9062000026908262000281565b503480156200003457600080fd5b50604051620024783803806200247883398101604081905262000057916200036a565b6040518060400160405280600a81526020016946616e746173794f6e6560b01b815250604051806040016040528060038152602001622320a760e91b8152508160029081620000a7919062000281565b506003620000b6828262000281565b5050600160005550620000c9336200010d565b600a80546001600160a01b038086166001600160a01b031992831617909255600b80549285169290911691909117905562000104816200015f565b50505062000464565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620001696200017b565b600c62000177828262000281565b5050565b6008546001600160a01b03163314620001da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200020757607f821691505b6020821081036200022857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027c57600081815260208120601f850160051c81016020861015620002575750805b601f850160051c820191505b81811015620002785782815560010162000263565b5050505b505050565b81516001600160401b038111156200029d576200029d620001dc565b620002b581620002ae8454620001f2565b846200022e565b602080601f831160018114620002ed5760008415620002d45750858301515b600019600386901b1c1916600185901b17855562000278565b600085815260208120601f198616915b828110156200031e57888601518255948401946001909101908401620002fd565b50858210156200033d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200036557600080fd5b919050565b6000806000606084860312156200038057600080fd5b6200038b846200034d565b925060206200039c8186016200034d565b60408601519093506001600160401b0380821115620003ba57600080fd5b818701915087601f830112620003cf57600080fd5b815181811115620003e457620003e4620001dc565b604051601f8201601f19908116603f011681019083821181831017156200040f576200040f620001dc565b816040528281528a868487010111156200042857600080fd5b600093505b828410156200044c57848401860151818501870152928501926200042d565b60008684830101528096505050505050509250925092565b61200480620004746000396000f3fe6080604052600436106101ee5760003560e01c80637ad3def21161010d578063b88d4fde116100a0578063e6f12af91161006f578063e6f12af9146105a3578063e985e9c5146105c3578063f2fde38b146105e3578063fc0c546a14610603578063fcf4ed931461062357600080fd5b8063b88d4fde14610530578063c87b56dd14610543578063d122e93a14610563578063d5534b6a1461058357600080fd5b8063952f4023116100dc578063952f4023146104a857806395d89b41146104db5780639cf60028146104f0578063a22cb4651461051057600080fd5b80637ad3def21461042a5780637dc0d1d01461044a5780638556646b1461046a5780638da5cb5b1461048a57600080fd5b806342842e0e116101855780636c0360eb116101545780636c0360eb1461039a5780636d0f220e146103af57806370a08231146103f5578063715018a61461041557600080fd5b806342842e0e1461030657806355f804b3146103195780636352211e1461033957806367883f4b1461035957600080fd5b8063101b0fbc116101c1578063101b0fbc1461029757806318160ddd146102ac5780631cb44dfc146102d357806323b872dd146102f357600080fd5b806301ffc9a7146101f357806306fdde0314610228578063081812fc1461024a578063095ea7b314610282575b600080fd5b3480156101ff57600080fd5b5061021361020e366004611945565b610643565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b5061023d610695565b60405161021f91906119b2565b34801561025657600080fd5b5061026a6102653660046119c5565b610727565b6040516001600160a01b03909116815260200161021f565b6102956102903660046119fa565b61076b565b005b3480156102a357600080fd5b5061023d61080b565b3480156102b857600080fd5b5060015460005403600019015b60405190815260200161021f565b3480156102df57600080fd5b506102956102ee366004611a24565b610899565b610295610301366004611a3f565b6108c3565b610295610314366004611a3f565b610a5c565b34801561032557600080fd5b50610295610334366004611b07565b610a7c565b34801561034557600080fd5b5061026a6103543660046119c5565b610a94565b34801561036557600080fd5b50610379610374366004611b5f565b610a9f565b60408051825160ff908116825260209384015116928101929092520161021f565b3480156103a657600080fd5b5061023d610b1f565b3480156103bb57600080fd5b506103e16103ca3660046119c5565b60096020526000908152604090205462ffffff1681565b60405162ffffff909116815260200161021f565b34801561040157600080fd5b506102c5610410366004611a24565b610b2c565b34801561042157600080fd5b50610295610b7b565b34801561043657600080fd5b50610295610445366004611a24565b610b8f565b34801561045657600080fd5b50600a5461026a906001600160a01b031681565b34801561047657600080fd5b506102c5610485366004611b5f565b610bb9565b34801561049657600080fd5b506008546001600160a01b031661026a565b3480156104b457600080fd5b50600b546104c990600160a01b900460ff1681565b60405160ff909116815260200161021f565b3480156104e757600080fd5b5061023d610c2a565b3480156104fc57600080fd5b506104c961050b366004611b5f565b610c39565b34801561051c57600080fd5b5061029561052b366004611b8a565b610caa565b61029561053e366004611bc1565b610d16565b34801561054f57600080fd5b5061023d61055e3660046119c5565b610d60565b34801561056f57600080fd5b506102c561057e366004611b5f565b610de7565b34801561058f57600080fd5b5061029561059e366004611b5f565b610e1b565b3480156105af57600080fd5b506102956105be366004611c3d565b610e43565b3480156105cf57600080fd5b506102136105de366004611c88565b611321565b3480156105ef57600080fd5b506102956105fe366004611a24565b61134f565b34801561060f57600080fd5b50600b5461026a906001600160a01b031681565b34801561062f57600080fd5b506104c961063e366004611b5f565b6113c8565b60006301ffc9a760e01b6001600160e01b03198316148061067457506380ac58cd60e01b6001600160e01b03198316145b8061068f5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546106a490611cbb565b80601f01602080910402602001604051908101604052809291908181526020018280546106d090611cbb565b801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b6000610732826113fc565b61074f576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061077682610a94565b9050336001600160a01b038216146107af576107928133611321565b6107af576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600d805461081890611cbb565b80601f016020809104026020016040519081016040528092919081815260200182805461084490611cbb565b80156108915780601f1061086657610100808354040283529160200191610891565b820191906000526020600020905b81548152906001019060200180831161087457829003601f168201915b505050505081565b6108a1611431565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006108ce8261148b565b9050836001600160a01b0316816001600160a01b0316146109015760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761094e576109318633611321565b61094e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661097557604051633a954ecd60e21b815260040160405180910390fd5b801561098057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610a1257600184016000818152600460205260408120549003610a10576000548114610a105760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b610a7783838360405180602001604052806000815250610d16565b505050565b610a84611431565b600c610a908282611d3b565b5050565b600061068f8261148b565b60408051808201825260008082526020820152600a5491516367883f4b60e01b815260ff8416600482015290916001600160a01b0316906367883f4b906024016040805180830381865afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611dfb565b600c805461081890611cbb565b60006001600160a01b038216610b55576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610b83611431565b610b8d6000611501565b565b610b97611431565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600a54604051638556646b60e01b815260ff831660048201526000916001600160a01b031690638556646b906024015b602060405180830381865afa158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611e5a565b6060600380546106a490611cbb565b600a5460405163139ec00560e31b815260ff831660048201526000916001600160a01b031690639cf60028906024015b602060405180830381865afa158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611e73565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610d218484846108c3565b6001600160a01b0383163b15610d5a57610d3d84848484611553565b610d5a576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610d6b826113fc565b610d8857604051630a14c4b560e41b815260040160405180910390fd5b600c8054610d9590611cbb565b9050600003610db3576040518060200160405280600081525061068f565b600c610dbe8361163f565b600d604051602001610dd293929190611f03565b60405160208183030381529060405292915050565b600a54604051636891749d60e11b815260ff831660048201526000916001600160a01b03169063d122e93a90602401610be9565b610e23611431565b600b805460ff909216600160a01b0260ff60a01b19909216919091179055565b60008360ff16118015610e5a575060148360ff1611155b610eab5760405162461bcd60e51b815260206004820152601f60248201527f4d61696e20647269766572206e756d626572206f7574206f662072616e67650060448201526064015b60405180910390fd5b60008260ff16118015610ec2575060148260ff1611155b610f1a5760405162461bcd60e51b8152602060048201526024808201527f5365636f6e6461727920647269766572206e756d626572206f7574206f662072604482015263616e676560e01b6064820152608401610ea2565b60008160ff16118015610f315750600a8160ff1611155b610f7d5760405162461bcd60e51b815260206004820152601860248201527f5465616d206e756d626572206f7574206f662072616e676500000000000000006044820152606401610ea2565b600a54604051636891749d60e11b815260ff851660048201526000916001600160a01b03169063d122e93a90602401602060405180830381865afa158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed9190611e5a565b600a54604051636891749d60e11b815260ff861660048201529192506000916001600160a01b039091169063d122e93a90602401602060405180830381865afa15801561103e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110629190611e5a565b600a54604051638556646b60e01b815260ff861660048201529192506000916001600160a01b0390911690638556646b90602401602060405180830381865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190611e5a565b90506000816110e68486611f36565b6110f09190611f36565b600b546040516370a0823160e01b815233600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190611e5a565b10156111af5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e2062616c616e63652e000000000000006044820152606401610ea2565b600b54604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156111fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112219190611e5a565b101561126f5760405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152606401610ea2565b600b546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156112c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ea9190611f57565b5060006113006001546000546000199190030190565b61130b906001611f36565b905061131733826116d2565b5050505050505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b611357611431565b6001600160a01b0381166113bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ea2565b6113c581611501565b50565b600a5460405163fcf4ed9360e01b815260ff831660048201526000916001600160a01b03169063fcf4ed9390602401610c69565b600081600111158015611410575060005482105b801561068f575050600090815260046020526040902054600160e01b161590565b6008546001600160a01b03163314610b8d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ea2565b600081806001116114e8576000548110156114e85760008181526004602052604081205490600160e01b821690036114e6575b806000036114df5750600019016000818152600460205260409020546114be565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611588903390899088908890600401611f74565b6020604051808303816000875af19250505080156115c3575060408051601f3d908101601f191682019092526115c091810190611fb1565b60015b611621573d8080156115f1576040519150601f19603f3d011682016040523d82523d6000602084013e6115f6565b606091505b508051600003611619576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600061164c836116ec565b600101905060008167ffffffffffffffff81111561166c5761166c611a7b565b6040519080825280601f01601f191660200182016040528015611696576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846116a057509392505050565b610a908282604051806020016040528060008152506117c4565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061172b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611757576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061177557662386f26fc10000830492506010015b6305f5e100831061178d576305f5e100830492506008015b61271083106117a157612710830492506004015b606483106117b3576064830492506002015b600a831061068f5760010192915050565b6117ce8383611831565b6001600160a01b0383163b15610a77576000548281035b6117f86000868380600101945086611553565b611815576040516368d2bf6b60e11b815260040160405180910390fd5b8181106117e557816000541461182a57600080fd5b5050505050565b60008054908290036118565760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461190557808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016118cd565b508160000361192657604051622e076360e81b815260040160405180910390fd5b60005550505050565b6001600160e01b0319811681146113c557600080fd5b60006020828403121561195757600080fd5b81356114df8161192f565b60005b8381101561197d578181015183820152602001611965565b50506000910152565b6000815180845261199e816020860160208601611962565b601f01601f19169290920160200192915050565b6020815260006114df6020830184611986565b6000602082840312156119d757600080fd5b5035919050565b80356001600160a01b03811681146119f557600080fd5b919050565b60008060408385031215611a0d57600080fd5b611a16836119de565b946020939093013593505050565b600060208284031215611a3657600080fd5b6114df826119de565b600080600060608486031215611a5457600080fd5b611a5d846119de565b9250611a6b602085016119de565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611aac57611aac611a7b565b604051601f8501601f19908116603f01168101908282118183101715611ad457611ad4611a7b565b81604052809350858152868686011115611aed57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611b1957600080fd5b813567ffffffffffffffff811115611b3057600080fd5b8201601f81018413611b4157600080fd5b61163784823560208401611a91565b60ff811681146113c557600080fd5b600060208284031215611b7157600080fd5b81356114df81611b50565b80151581146113c557600080fd5b60008060408385031215611b9d57600080fd5b611ba6836119de565b91506020830135611bb681611b7c565b809150509250929050565b60008060008060808587031215611bd757600080fd5b611be0856119de565b9350611bee602086016119de565b925060408501359150606085013567ffffffffffffffff811115611c1157600080fd5b8501601f81018713611c2257600080fd5b611c3187823560208401611a91565b91505092959194509250565b600080600060608486031215611c5257600080fd5b8335611c5d81611b50565b92506020840135611c6d81611b50565b91506040840135611c7d81611b50565b809150509250925092565b60008060408385031215611c9b57600080fd5b611ca4836119de565b9150611cb2602084016119de565b90509250929050565b600181811c90821680611ccf57607f821691505b602082108103611cef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a7757600081815260208120601f850160051c81016020861015611d1c5750805b601f850160051c820191505b81811015610a5457828155600101611d28565b815167ffffffffffffffff811115611d5557611d55611a7b565b611d6981611d638454611cbb565b84611cf5565b602080601f831160018114611d9e5760008415611d865750858301515b600019600386901b1c1916600185901b178555610a54565b600085815260208120601f198616915b82811015611dcd57888601518255948401946001909101908401611dae565b5085821015611deb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060408284031215611e0d57600080fd5b6040516040810181811067ffffffffffffffff82111715611e3057611e30611a7b565b6040528251611e3e81611b50565b81526020830151611e4e81611b50565b60208201529392505050565b600060208284031215611e6c57600080fd5b5051919050565b600060208284031215611e8557600080fd5b81516114df81611b50565b60008154611e9d81611cbb565b60018281168015611eb55760018114611eca57611ef9565b60ff1984168752821515830287019450611ef9565b8560005260208060002060005b85811015611ef05781548a820152908401908201611ed7565b50505082870194505b5050505092915050565b6000611f0f8286611e90565b8451611f1f818360208901611962565b611f2b81830186611e90565b979650505050505050565b8082018082111561068f57634e487b7160e01b600052601160045260246000fd5b600060208284031215611f6957600080fd5b81516114df81611b7c565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fa790830184611986565b9695505050505050565b600060208284031215611fc357600080fd5b81516114df8161192f56fea2646970667358221220b464f6f239e8a9d7e0f855a6d12b4372a9f5682b97b18453c54fdb2ca7b9601664736f6c63430008110033";

type FantasyOneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FantasyOneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FantasyOne__factory extends ContractFactory {
  constructor(...args: FantasyOneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FantasyOne> {
    return super.deploy(
      _oracle,
      _token,
      _baseURI,
      overrides || {}
    ) as Promise<FantasyOne>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _token,
      _baseURI,
      overrides || {}
    );
  }
  override attach(address: string): FantasyOne {
    return super.attach(address) as FantasyOne;
  }
  override connect(signer: Signer): FantasyOne__factory {
    return super.connect(signer) as FantasyOne__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FantasyOneInterface {
    return new utils.Interface(_abi) as FantasyOneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FantasyOne {
    return new Contract(address, _abi, signerOrProvider) as FantasyOne;
  }
}
